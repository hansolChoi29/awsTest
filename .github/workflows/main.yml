name: Deploy to EC2

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'
      - run: chmod +x gradlew
      - run: ./gradlew clean bootJar -x test

      - name: Copy jar to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "build/libs/*.jar"
          target: "/home/ec2-user/awsTest/build/libs/"

      - name: Restart app on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd /home/ec2-user || exit 1
            [ -d awsTest/.git ] || git clone https://github.com/hansolChoi29/awsTest.git
            cd awsTest
            git pull --rebase origin main
            chmod +x gradlew
            ./gradlew clean bootJar -x test
            pkill -f 'awsTest-0.0.1-SNAPSHOT.jar' || true
            nohup java -jar build/libs/*-SNAPSHOT.jar \
              --server.port=8080 \
              --spring.main.web-application-type=servlet \
              --spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration,org.springframework.boot.actuate.autoconfigure.security.servlet.ManagementWebSecurityAutoConfiguration \
              > /home/ec2-user/app.log 2>&1 &
            sleep 3
            pgrep -f 'awsTest-0.0.1-SNAPSHOT.jar' >/dev/null && echo "ðŸš€ App started" || (tail -n 200 /home/ec2-user/app.log; exit 1)
            exit 0
