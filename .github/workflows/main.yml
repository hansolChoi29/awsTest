name: Deploy to EC2

on:
  push:
    branches: ["main"]  
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17 (Corretto)
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Grant execute permission for Gradle
        run: chmod +x gradlew

      - name: Build (bootJar)
        run: ./gradlew clean bootJar -x test

      # 빌드 결과 업로드(선택). 같은 job이면 생략해도 되지만, 디버깅에 유용
      - name: Upload artifact (optional)
        uses: actions/upload-artifact@v4
        with:
          name: built-jar
          path: build/libs/*.jar

      - name: Copy jar to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "build/libs/*.jar"
          target: "/home/ec2-user/awsTest/"

      - name: Restart app on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            set -euo pipefail
            APP_DIR="/home/ec2-user/awsTest"
            LOG="/home/ec2-user/app.log"
            cd "$APP_DIR"

            echo "[EC2] 현재 디렉토리 파일 목록:"
            ls -al

            # 최신 JAR 선택(plain 제외)
            JAR="$(ls -1t *.jar 2>/dev/null | grep -v 'plain' | head -n 1 || true)"
            if [ -z "${JAR:-}" ]; then
              echo " JAR 파일을 찾지 못했습니다. (업로드 실패 또는 경로 확인)"
              exit 1
            fi
            echo " Using JAR: $JAR"

            # 기존 프로세스 종료(해당 JAR 또는 폴더 기준)
            pgrep -f "java.*${JAR}" >/dev/null 2>&1 && pkill -f "java.*${JAR}" || true
            pgrep -f "java.*build/libs" >/dev/null 2>&1 && pkill -f "java.*build/libs" || true
            sleep 1

            # 실행
            nohup java -jar "$JAR" --spring.profiles.active=prod > "$LOG" 2>&1 &

            sleep 3
            if pgrep -f "$JAR" >/dev/null 2>&1; then
              echo " App started"
              tail -n 50 "$LOG" || true
            else
              echo " App failed to start. 최근 로그:"
              tail -n 200 "$LOG" || true
              exit 1
            fi
