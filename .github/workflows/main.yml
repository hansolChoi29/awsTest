name: Deploy to EC2

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17 (Corretto)
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'
          cache: 'gradle'

      - name: Grant execute for gradlew
        run: chmod +x gradlew

      - name: Build (bootJar, skip tests)
        run: ./gradlew clean bootJar -x test

      - name: Upload JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "build/libs/*.jar"
          target: "/home/ec2-user/awsTest/"

      - name: Restart app on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            set -e
            mkdir -p /home/ec2-user/awsTest
            cd /home/ec2-user/awsTest
            JAR=$(ls *.jar | grep -v 'plain' | sort | tail -n 1)
            echo "Using JAR: $JAR"
            # 기존 프로세스 종료(있으면)
            pkill -f "java.*$JAR" 2>/dev/null || pkill -f "java.*build/libs" 2>/dev/null || true
            sleep 1
            # 실행 (프로필이 필요 없으면 옵션 제거)
            nohup java -jar "$JAR" --spring.profiles.active=prod > app.log 2>&1 &
            sleep 3
            pgrep -f "$JAR" >/dev/null && echo "App started" || (echo "App failed"; tail -n 200 app.log; exit 1)
