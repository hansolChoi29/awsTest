name: Deploy to EC2

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'
      - run: chmod +x gradlew
      - run: ./gradlew clean bootJar -x test

      - name: Copy jar to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "build/libs/*.jar"
          target: "/home/ec2-user/awsTest/build/libs/"

      - name: Restart app on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            set -e
            APP_DIR="/home/ec2-user/awsTest"
            LOG="/home/ec2-user/app.log"
            JAR="$(ls -1t $APP_DIR/build/libs/*.jar | grep -v plain | head -n 1 || true)"
            [ -z "${JAR:-}" ] && echo "no runnable JAR in $APP_DIR/build/libs" && exit 1

            pkill -f "java.*$(basename "$JAR")" || true
            nohup java -jar "$JAR" \
              --server.port=8080 \
              --spring.main.web-application-type=servlet \
              --spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration,org.springframework.boot.actuate.autoconfigure.security.servlet.ManagementWebSecurityAutoConfiguration \
              > "$LOG" 2>&1 &

            sleep 3
            pgrep -f "$(basename "$JAR")" >/dev/null || (tail -n 200 "$LOG"; exit 1)
            echo "OK"
